#!/bin/sh

set -e

# Variables that can be provided externally.
: ${CC:=x86_64-unknown-cloudabi-cc}
: ${CXX:=x86_64-unknown-cloudabi-c++}
: ${AR:=x86_64-unknown-cloudabi-ar}
: ${CFLAGS:=-O3 -fomit-frame-pointer -g}
: ${WARNFLAGS:=}

# Contributed sources.
ARGDATA=contrib/argdata-0.5
DOUBLE_CONVERSION=contrib/double-conversion-d8d4e66
JEMALLOC=contrib/jemalloc-4.5.0
MUSL=contrib/musl-b261a24

# Additional compiler flags to include the right files, etc.
CFLAGS="${CFLAGS} -Isrc -Isrc/include -I${ARGDATA}/src -I${DOUBLE_CONVERSION} \
-I${JEMALLOC}/include -I${MUSL}/src/internal -fno-exceptions -fno-rtti"

# List of source files.
SRCS=$(find src ${ARGDATA} ${DOUBLE_CONVERSION} ${JEMALLOC} ${MUSL} \
    \( -name '*.[cS]' -o -name '*.cc' \) | sort)

if [ "$1" != "fast" ]; then
  echo "=> Computing dependencies"
  rm -Rf _obj/dep
  mkdir -p _obj/dep
  for srcfile in ${SRCS}; do
    safename="$(echo "${srcfile}" | sed -e 's/\//_/g' -e 's/\.[a-zA-Z]*$//')"
    echo "-MT _obj/${safename}.o -MF _obj/dep/${safename}.d ${srcfile}"
  done | xargs -P 8 -n 5 ${CC} ${CFLAGS} -MM
  for srcfile in ${SRCS}; do
    safename="$(echo "${srcfile}" | sed -e 's/\//_/g' -e 's/\.[a-zA-Z]*$//')"
    case "${srcfile}" in
    ${DOUBLE_CONVERSION}/*|${JEMALLOC}/*|${MUSL}/*) extraflags="" ;;
    src/crt/*) extraflags="${WARNFLAGS} -ffreestanding -fno-sanitize=safe-stack -fno-stack-protector" ;;
    *_test.c) extraflags="${WARNFLAGS} -fno-builtin -O0 -fsanitize=address" ;;
    src/libc/pthread/pthread_create.c) extraflags="${WARNFLAGS} -fno-sanitize=safe-stack" ;;
    src/libc/string/memset.c) extraflags="${WARNFLAGS} -fno-builtin-memset" ;;
    *) extraflags="${WARNFLAGS}" ;;
    esac
    case "${srcfile}" in
    *.cc) extraflags="${extraflags} -std=c++11" ;;
    esac
    cat >> "_obj/dep/${safename}.d" << EOF
	${CC} ${CFLAGS} ${extraflags} -c -o _obj/${safename}.o ${srcfile}
all: _obj/${safename}.o
EOF
  done
  cat _obj/dep/*.d > _obj/Makefile
fi

echo "=> Compiling sources"
make -k -j8 -f _obj/Makefile all

echo "=> Linking libraries"
rm -f _obj/libc.a _obj/libm.a _obj/libpthread.a \
    _obj/librt.a _obj/libuv.a _obj/libxnet.a
find src/libc ${ARGDATA} ${DOUBLE_CONVERSION} ${JEMALLOC} ${MUSL} \
    \( -name '*.[cS]' -o -name '*.cc' \) \! -name "*_test.c" | sort |
    sed -e 's/\//_/g' -e 's/^/_obj\//' -e 's/\.[a-zA-Z]*$/\.o/' |
    xargs ${AR} rcs _obj/libc.a
${AR} rcs _obj/libargdata.a
${AR} rcs _obj/libm.a
${AR} rcs _obj/libpthread.a
${AR} rcs _obj/librt.a
${AR} rcs _obj/libuv.a
${AR} rcs _obj/libxnet.a
cp _obj/src_crt_crt0.o _obj/crt0.o
cp _obj/src_crt_crtbegin.o _obj/crtbegin.o
cp _obj/src_crt_crtend.o _obj/crtend.o

echo "=> Building unit tests"
${CXX} -Wl,--export-dynamic -L_obj -B_obj -o _obj/cloudlibc-unittests -fsanitize=address \
    $(find src -name "*_test.c" | sort | sed -e 's/\//_/g' -e 's/^/_obj\//' -e 's/\.c$/\.o/')
